name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you uploaded a ZIP instead of source, unzip it first
      - name: Unzip project if archive found
        run: |
          set -e
          shopt -s nullglob
          for z in *.zip; do
            echo "Unzipping $z"
            unzip -q "$z" -d .
          done

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Install Android SDK cmdline tools & accept licenses
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses || true

      # Find your project root (folder containing settings.gradle[.kts])
      - name: Locate project directory
        id: findproj
        shell: bash
        run: |
          set -e
          PROJECT_DIR=$(dirname $(find . -maxdepth 4 -name "settings.gradle.kts" -o -name "settings.gradle" | head -n1))
          if [ -z "$PROJECT_DIR" ]; then
            echo "❌ Could not find settings.gradle(.kts)."
            exit 1
          fi
          echo "project_dir=$PROJECT_DIR" >> $GITHUB_OUTPUT

      # If no wrapper in repo, bootstrap it
      - name: Bootstrap Gradle Wrapper if missing
        working-directory: ${{ steps.findproj.outputs.project_dir }}
        run: |
          if [ ! -f "./gradlew" ]; then
            echo "Gradle wrapper not found. Bootstrapping…"
            GRADLE_VERSION=8.10.2
            curl -sL https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip -o gradle.zip
            unzip -q gradle.zip
            ./gradle-${GRADLE_VERSION}/bin/gradle wrapper
          fi
          chmod +x ./gradlew

      # Build Debug APK
      - name: Build Debug APK
        working-directory: ${{ steps.findproj.outputs.project_dir }}
        run: ./gradlew :app:assembleDebug --stacktrace --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: Spamurai-debug-apk
          path: ${{ steps.findproj.outputs.project_dir }}/app/build/outputs/apk/debug/*.apk
